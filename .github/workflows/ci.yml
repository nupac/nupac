---
name: CI
'on':
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Container registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_ACTION_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.1.0
        with:
          registry: ghcr.io
          context: ./testing/docker
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.event.pull_request.number || 'latest' }}

  setup:
    name: Lint, Pre-Commit and Test setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.RELEASE_ACTION_TOKEN }}

      - name: Setup Nu
        uses: hustcer/setup-nu@v3
        with:
          version: '0.73.0'

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Run linter on all modules
        run: ./testing/linter.nu
        shell: nu {0}

      - name: Update nupac's checksum
        run: ./update-checksum.nu
        shell: nu {0}

      - name: Generate test list
        id: generate-matrix
        run: ./testing/get-testcases.nu
        shell: nu {0}

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0
        id: pre-commit
        with:
          extra_args: --all-files --show-diff-on-failure --color=always
        continue-on-error: true

      - name: Push changes back if present
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: pre-commit fixes and new cache

    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

  test:
    name: Tests
    needs:
      - setup
      - docker
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip3 install wheel setuptools
          pip3 install -r testing/requirements.txt

      - name: Run ${{ matrix.test }}
        run: |
          cd testing
          molecule test
        env:
          TEST: ${{ matrix.test }}
          TAG: ${{ github.event.pull_request.number || 'latest' }}
