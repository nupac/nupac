# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

RUN if [ $(command -v apt-get) ]; then apt-get update && apt-get install -y python3 sudo bash ca-certificates iproute2 wget && apt-get clean; \
    elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes install python sudo python-devel python*-dnf bash iproute && dnf clean all; \
    elif [ $(command -v yum) ]; then yum makecache fast && yum install -y python sudo yum-plugin-ovl bash iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python sudo bash python-xml iproute2 && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python3 sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python sudo bash ca-certificates iproute2 && xbps-remove -O; fi
ENV ANSIBLE_USER=ansible SUDO_GROUP={{'wheel' if 'alpine' in item.image else 'sudo' }}
RUN set -xe \
  && adduser {{'-SD' if 'alpine' in item.image else '--system --disabled-password'}} ${ANSIBLE_USER} \
  && adduser ${ANSIBLE_USER} ${SUDO_GROUP} \
  && mkdir -p /home/${ANSIBLE_USER}/.config/nushell/ \
  && wget -q https://raw.githubusercontent.com/nushell/nushell/main/docs/sample_config/default_config.nu -O /home/${ANSIBLE_USER}/.config/nushell/config.nu \
  && wget -q https://raw.githubusercontent.com/nushell/nushell/main/docs/sample_config/default_env.nu -O /home/${ANSIBLE_USER}/.config/nushell/env.nu \
  && cd /tmp \
  && wget -qO - https://api.github.com/repos/nushell/nushell/releases/tags/${NUSHELL_INSTALL_VERSION} \
  |grep browser_download_url \
  |grep x86_64 \
  |grep {{'musl' if 'alpine' in item.image else 'gnu' }} \
  |cut -f4 -d '"' \
  |xargs -I{} wget {} \
  && tar -xzf nu* \
  && chmod +x nu \
  && mv nu ${NUSHELL_INSTALL_DIR}/nu \
  && chown -R ${ANSIBLE_USER}:${SUDO_GROUP} /home/${ANSIBLE_USER}/.config/nushell \
  && rm -rf /tmp/*
CMD ["/usr/bin/cat"]
USER ${ANSIBLE_USER}
WORKDIR /home/${ANSIBLE_USER}