---
- name: Uninstall package
  hosts: all
  become: false
  vars:
    package: make

  tasks:
    - name: Install package
      raw: "nupac install {{ package }} -a"
      args:
        executable: "{{ nu }}"

    - name: Stat {{ package }}.nu
      stat:
        path: "{{ nushell_dir }}/scripts/{{ package }}.nu"
      register: package_state

    - name: Check nu-pkgs.nu content
      slurp:
        src: "{{ nushell_dir }}/scripts/nu-pkgs.nu"
      register: nupkgs

    - name: Get nushell scope
      raw: "$nu.scope.commands|get command|to json"
      args:
        executable: "{{ nu }}"
      register: scope

    - name: Assert package file was created and command was added to scope
      assert:
        that:
          - package_state.stat.exists
          - '"{{ package }}" in {{ scope.stdout | from_json }}'
          - "'use {{ package }}.nu * # added automatically by nupac' in {{ nupkgs['content'] | b64decode | split('\n') }}"

    - name: Uninstall package
      raw: "nupac remove make"
      args:
        executable: "{{ nu }}"

    - name: Stat {{ package }}.nu again
      stat:
        path: "{{ nushell_dir }}/scripts/{{ package }}.nu"
      register: package_state

    - name: Check nu-pkgs.nu content again
      slurp:
        src: "{{ nushell_dir }}/scripts/nu-pkgs.nu"
      register: nupkgs

    - name: Get nushell scope again
      raw: "$nu.scope.commands|get command|to json"
      args:
        executable: "{{ nu }}"
      register: scope

    - name: Assert package was deleted and removed from scope
      assert:
        that:
          - not package_state.stat.exists
          - '"{{ package }}" not in {{ scope.stdout | from_json }}'
          - "'use {{ package }}.nu * # added automatically by nupac' not in {{ nupkgs['content'] | b64decode | split('\n') }}"



